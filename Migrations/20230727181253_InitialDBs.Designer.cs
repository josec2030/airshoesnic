// <auto-generated />
using System;
using AirShoesNic01.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirShoesNic01.Migrations
{
    [DbContext(typeof(AirShoesNic01Context))]
    [Migration("20230727181253_InitialDBs")]
    partial class InitialDBs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AirShoesNic01.Models.Administrador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Carrito_de_compras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Clienteid")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_de_entrega")
                        .HasColumnType("datetime2");

                    b.Property<int?>("clientesid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clientesid");

                    b.ToTable("Carrito_de_compras");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Clientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info_tarjeta_Credito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idusuarios")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Detalle_del_pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Costo_unitario")
                        .HasColumnType("int");

                    b.Property<int>("Subtotal")
                        .HasColumnType("int");

                    b.Property<int>("pedidoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pedidoid");

                    b.ToTable("Detalle_del_pedido");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Informacion_del_envio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Estado_de_envio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pedidoid")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_de_Envio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Pedidoid");

                    b.ToTable("Informacion_del_envio");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Estado_del_pedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clienteid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_de_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_de_envio")
                        .HasColumnType("datetime2");

                    b.Property<int>("productoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.HasIndex("productoid");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int?>("Productoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Contraseña")
                        .HasColumnType("int");

                    b.Property<int>("administradorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("administradorid");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Carrito_de_compras", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Clientes", "clientes")
                        .WithMany("Carrito_De_Compras")
                        .HasForeignKey("clientesid");

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Clientes", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Usuarios", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("Usuarioid");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Detalle_del_pedido", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Pedido", "pedido")
                        .WithMany("Detalles_Del_Pedidos")
                        .HasForeignKey("pedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Informacion_del_envio", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Pedido", "Pedido")
                        .WithMany("Informacion_Del_Envios")
                        .HasForeignKey("Pedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Pedido", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Clientes", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirShoesNic01.Models.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Producto", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Producto", null)
                        .WithMany("Productos")
                        .HasForeignKey("Productoid");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Usuarios", b =>
                {
                    b.HasOne("AirShoesNic01.Models.Administrador", "administrador")
                        .WithMany("Usuarios")
                        .HasForeignKey("administradorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("administrador");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Administrador", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Clientes", b =>
                {
                    b.Navigation("Carrito_De_Compras");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Pedido", b =>
                {
                    b.Navigation("Detalles_Del_Pedidos");

                    b.Navigation("Informacion_Del_Envios");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Producto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("AirShoesNic01.Models.Usuarios", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
